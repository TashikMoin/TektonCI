# prod pipeline
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: johndoe-stg
spec:
  description: | 
    A workflow to continuously integrate and continuously deliver/deploy a java spring microservice.

  params:
  - name: url
    type: string
    description: The git repo URL to clone from.
    default: ssh://git@github.com/JohndoeWorkflow/Johndoe_Java_Microservice.git
  - name: revision
    type: string
  - name: imageBuilder
    type: string
    default: gcr.io/kaniko-project/executor:v1.5.1
  - name: image
    type: string
    default: tashikmoin/johndoe-java-microservice:1
  - name: context
    type: string
    default: ./
  - name: build 
    type: string
    default: latest
  - name: git_user_name
    type: string
    description: |
      Git user name for performing git operation.
    default: "tashikmoin"
  - name: git_user_email
    type: string
    description: |
      Git user email for performing git operation.
    default: "tashikmoinsheikh@gmail.com"
  - name: dockerfile
    type: string
    default: /workspace/source/
    # because the cloned repository will be inside source workspace which is mounted to build task.

  workspaces:
  - name: pipeline-secrets
  - name: shared-data
    description: | 
      This workspace contains the cloned repo files, so they can be read by the
      next task.

  tasks:
  - name: checkout
    taskRef:
      name: git-clone
    workspaces:
    - name: ssh-directory
      workspace: pipeline-secrets
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.url)

  - name: build-and-push-to-docker-registry
    runAfter: ["checkout"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: pipeline-secrets
    params:
    - name: IMAGE
      value: "$(params.image):$(params.build)"
    - name: BUILDER_IMAGE
      value: $(params.imageBuilder)
    - name: CONTEXT
      value: $(params.context)

  - name: deploy
    taskRef:
      name: git-cli
    runAfter:
      - checkout 
      - build-and-push-to-docker-registry
    workspaces:
    - name: ssh-directory
      workspace: pipeline-secrets
    - name: source
      workspace: shared-data
    params:
    - name: build
      value: $(params.build)
    - name: GIT_USER_NAME
      value: $(params.git_user_name)
    - name: GIT_USER_EMAIL
      value: $(params.git_user_email)
    - name: GIT_SCRIPT
      value: |
        git clone https://github.com/TashikMoin/ArgoCD.git
        echo "before cd"
        cd ./ArgoCD/Manifest/
        echo "after cd"
        ls -a
        echo "before sed"
        cat ArgoCD/Manifest/deployment.yaml
        sed -E -i 's/(image: tashikmoin\/johndoe-java-microservice:)[^[:space:]]+/\1$(params.build)/'  deployment.yaml
        echo "after sed"
        cat ArgoCD/Manifest/deployment.yaml
        git add .
        echo "after git add ."
        git commit "updated image tag from TektonCI"
        echo "after commit"
        git push -u origin main
        cat ArgoCD/Manifest/deployment.yaml